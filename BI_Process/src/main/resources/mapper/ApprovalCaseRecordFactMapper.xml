<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianma.BI_Process.Repository.ApprovalCaseRecordFactMapper">
  <resultMap id="BaseResultMap" type="com.tianma.BI_Process.Domain.ApprovalCaseRecordFact">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="modify_user" jdbcType="VARCHAR" property="modify_user" />
    <result column="create_user" jdbcType="VARCHAR" property="create_user" />
    <result column="Create_Date" jdbcType="TIMESTAMP" property="create_Date" />
    <result column="Record_Date" jdbcType="TIMESTAMP" property="record_Date" />
    <result column="Case_Id" jdbcType="INTEGER" property="case_Id" />
    <result column="Currenty_Node_Id" jdbcType="INTEGER" property="currenty_Node_Id" />
    <result column="opration_user" jdbcType="INTEGER" property="opration_user" />
    <result column="opration_result" jdbcType="INTEGER" property="opration_result" />
    <result column="opration_reason" jdbcType="VARCHAR" property="opration_reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, modify_user, create_user, Create_Date, Record_Date, Case_Id, Currenty_Node_Id, 
    opration_user, opration_result, opration_reason
  </sql>
  
  <select id="selectByExample" parameterType="com.tianma.BI_Process.Domain.ApprovalCaseRecordFactExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_BP_Approval_Case_Record_Fact
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer"   resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SYS_BP_Approval_Case_Record_Fact
    where Id = #{id,jdbcType=INTEGER}
  </select> 
  
  <select id="selectByCodeAndDate"  parameterType="com.tianma.BI_Process.Domain.ApprovalCaseRecordFact"  resultMap="BaseResultMap">
    select *  from SYS_BP_Approval_Case_Record_Fact where 1=1
    and Create_Date=#{create_Date,jdbcType=TIMESTAMP}
    <if test="create_user!=null and create_user!='' "> 
    and create_user = #{create_user,jdbcType=VARCHAR} 
    </if>
  
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SYS_BP_Approval_Case_Record_Fact
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Id" keyProperty="id" parameterType="com.tianma.BI_Process.Domain.ApprovalCaseRecordFact" useGeneratedKeys="true">
    insert into SYS_BP_Approval_Case_Record_Fact (modify_user, create_user, Create_Date, 
      Record_Date, Case_Id, Currenty_Node_Id, 
      opration_user, opration_result, opration_reason
      )
    values (#{modify_user,jdbcType=VARCHAR}, #{create_user,jdbcType=VARCHAR}, #{create_Date,jdbcType=TIMESTAMP}, 
      #{record_Date,jdbcType=TIMESTAMP}, #{case_Id,jdbcType=INTEGER}, #{currenty_Node_Id,jdbcType=INTEGER}, 
      #{opration_user,jdbcType=INTEGER}, #{opration_result,jdbcType=INTEGER}, #{opration_reason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="Id" keyProperty="id" parameterType="com.tianma.BI_Process.Domain.ApprovalCaseRecordFact" useGeneratedKeys="true">
    insert into SYS_BP_Approval_Case_Record_Fact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modify_user != null">
        modify_user,
      </if>
      <if test="create_user != null">
        create_user,
      </if>
      <if test="create_Date != null">
        Create_Date,
      </if>
      <if test="record_Date != null">
        Record_Date,
      </if>
      <if test="case_Id != null">
        Case_Id,
      </if>
      <if test="currenty_Node_Id != null">
        Currenty_Node_Id,
      </if>
      <if test="opration_user != null">
        opration_user,
      </if>
      <if test="opration_result != null">
        opration_result,
      </if>
      <if test="opration_reason != null">
        opration_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modify_user != null">
        #{modify_user,jdbcType=VARCHAR},
      </if>
      <if test="create_user != null">
        #{create_user,jdbcType=VARCHAR},
      </if>
      <if test="create_Date != null">
        #{create_Date,jdbcType=TIMESTAMP},
      </if>
      <if test="record_Date != null">
        #{record_Date,jdbcType=TIMESTAMP},
      </if>
      <if test="case_Id != null">
        #{case_Id,jdbcType=INTEGER},
      </if>
      <if test="currenty_Node_Id != null">
        #{currenty_Node_Id,jdbcType=INTEGER},
      </if>
      <if test="opration_user != null">
        #{opration_user,jdbcType=INTEGER},
      </if>
      <if test="opration_result != null">
        #{opration_result,jdbcType=INTEGER},
      </if>
      <if test="opration_reason != null">
        #{opration_reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianma.BI_Process.Domain.ApprovalCaseRecordFact">
    update SYS_BP_Approval_Case_Record_Fact
    <set>
      <if test="modify_user != null">
        modify_user = #{modify_user,jdbcType=VARCHAR},
      </if>
      <if test="create_user != null">
        create_user = #{create_user,jdbcType=VARCHAR},
      </if>
      <if test="create_Date != null">
        Create_Date = #{create_Date,jdbcType=TIMESTAMP},
      </if>
      <if test="record_Date != null">
        Record_Date = #{record_Date,jdbcType=TIMESTAMP},
      </if>
      <if test="case_Id != null">
        Case_Id = #{case_Id,jdbcType=INTEGER},
      </if>
      <if test="currenty_Node_Id != null">
        Currenty_Node_Id = #{currenty_Node_Id,jdbcType=INTEGER},
      </if>
      <if test="opration_user != null">
        opration_user = #{opration_user,jdbcType=INTEGER},
      </if>
      <if test="opration_result != null">
        opration_result = #{opration_result,jdbcType=INTEGER},
      </if>
      <if test="opration_reason != null">
        opration_reason = #{opration_reason,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianma.BI_Process.Domain.ApprovalCaseRecordFact">
    update SYS_BP_Approval_Case_Record_Fact
    set modify_user = #{modify_user,jdbcType=VARCHAR},
      create_user = #{create_user,jdbcType=VARCHAR},
      Create_Date = #{create_Date,jdbcType=TIMESTAMP},
      Record_Date = #{record_Date,jdbcType=TIMESTAMP},
      Case_Id = #{case_Id,jdbcType=INTEGER},
      Currenty_Node_Id = #{currenty_Node_Id,jdbcType=INTEGER},
      opration_user = #{opration_user,jdbcType=INTEGER},
      opration_result = #{opration_result,jdbcType=INTEGER},
      opration_reason = #{opration_reason,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>